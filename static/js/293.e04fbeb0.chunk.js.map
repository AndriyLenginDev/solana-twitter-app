{"version":3,"file":"static/js/293.e04fbeb0.chunk.js","mappings":"2KAGaA,EAAiB,kBAAMC,EAAAA,EAAAA,Q,yDCAvBC,E,QAAkDC,I,6ECHxD,IACMC,EAAoB,IACpBC,EAAkB,I,iGCD/B,GAAgB,eAAiB,kCAAkC,KAAO,wBAAwB,MAAQ,0B,iCCsB1G,EAdsC,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,KAASC,GAAY,YACvE,OACE,iBAAKF,UAAW,CAACG,EAAAA,eAAwBH,GAAWI,KAAK,KAAzD,UACGH,IACC,SAACA,EAAD,CAAMD,UAAW,CAACG,EAAAA,KAAcD,EAAMG,SAAW,iBAAmB,IAAID,KAAK,QAE/E,SAACE,EAAA,GAAD,QACEN,UAAWG,EAAAA,OACPD,S,qHChBZ,GAAgB,SAAW,4B,uCCsB3B,EAdoC,SAAC,GAAyC,IAAvCF,EAAsC,EAAtCA,UAAWO,EAA2B,EAA3BA,WAAeL,GAAY,YACrEM,GAAcC,EAAAA,EAAAA,QAA4B,MAIhD,OCZmC,SAACD,GACpC,IAAME,GAAiBC,EAAAA,EAAAA,cAAY,WACjC,IAAMC,EAAO,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAaK,QACxBD,IACLA,EAAQE,MAAMC,OAAS,OACvBH,EAAQE,MAAMC,OAASH,EAAQI,aAAe,QAC7C,CAACR,KAEJS,EAAAA,EAAAA,YAAU,WACR,IAAML,EAAO,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAaK,QAC7B,GAAKD,EAIL,OAFAF,IACAE,EAAQM,iBAAiB,QAASR,GAC3B,WACE,OAAPE,QAAO,IAAPA,GAAAA,EAASO,oBAAoB,QAAST,MAEvC,CAACA,EAAgBF,IDPpBY,CAAsBb,EAAaC,OAAca,IAG/C,qCACEC,IAAKd,GACDN,GAFN,IAGEF,UAAW,CAACG,EAAAA,SAAkBH,GAAWI,KAAK,S,uCEjBpD,GAAgB,cAAgB,iCAAiC,aAAe,gCAAgC,MAAQ,yBAAyB,OAAS,0BAA0B,QAAU,4B,iDC2G9L,EA1FsC,SAAC,GAAgC,IAA9BJ,EAA6B,EAA7BA,UAAWuB,EAAkB,EAAlBA,YAC1CC,GAAcC,EAAAA,EAAAA,MAAdD,UACFE,GAAWhC,EAAAA,EAAAA,KACjB,GAA8BiC,EAAAA,EAAAA,UAAiB,IAA/C,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAiBJ,GAAe,IAA1D,eAAOO,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAkB,GAAhD,eAAOK,EAAP,KAAgBC,EAAhB,MAEAhB,EAAAA,EAAAA,YAAU,WACRc,EAASR,GAAe,MACvB,CAACA,IAEJ,IAQMW,GAAYC,EAAAA,EAAAA,UAAgB,WAChC,OAAOrC,EAAAA,GAAoB8B,EAAQQ,SAClC,CAACR,IAEES,GAAiBF,EAAAA,EAAAA,UAAgB,WACrC,OAAID,EAAY,EAAU,eACtBA,GAAa,GAAW,kBACrB,kBACN,CAACA,IAEEI,GAAgBH,EAAAA,EAAAA,UAAiB,WACrC,QAASZ,IACR,CAACA,IAEEgB,GAAeJ,EAAAA,EAAAA,UAAiB,WACpC,OAAQP,EAAQQ,QAAUF,EAAY,IACrC,CAACN,EAASM,IAEPM,EAAI,yCAAG,WAAOC,GAAP,+EACXA,EAAEC,kBAEEV,EAHO,iEAMTC,GAAW,GANF,UAOWU,EAAAA,EAAAA,GAAUf,EAASE,GAP9B,OAOHc,EAPG,OAQTlB,EAASmB,EAAAA,GAAAA,SAAuBD,IAChCf,EAAW,IACXE,EAASR,GAAe,IAVf,2EAcTU,GAAW,GAdF,6EAAH,sDAkBV,OAAKT,GAKH,kBAAMxB,UAAW,CAACG,EAAAA,cAAuBH,GAAWI,KAAK,KAAzD,WACE,SAAC,EAAD,CACEG,YAAU,EACVuC,YAAY,oBACZC,MAAOnB,EACPoB,SAtDmB,SAACP,GACxBZ,EAAWY,EAAEQ,OAAOF,WAuDlB,iBAAK/C,UAAWG,EAAAA,aAAhB,WACE,SAAC+C,EAAA,EAAD,CACElD,UAAWG,EAAAA,MACXF,KAAMkD,EAAAA,EACNC,UAAWrD,EAAAA,GACXM,SAAUiC,EACVS,MAAOjB,EACPkB,SA3DkB,SAACP,GACzBV,EAASU,EAAEQ,OAAOF,WA4Dd,iBAAK/C,UAAWG,EAAAA,OAAhB,WACE,kBAAMH,UAAW,CAACG,EAAAA,QAAiBkC,GAAgBjC,KAAK,KAAxD,UAA+D8B,EAA/D,YACA,SAACmB,EAAA,EAAD,CACEhD,SAAUkC,EACVP,QAASA,EACTsB,QAASd,EAHX,6BAtBC,SAACe,EAAA,EAAD,CAAU3B,QAAS,+C,2GCtD9B,EAlB8C,SAAC1B,GAC7C,OACE,gCACEsD,MAAM,6BACNC,QAAQ,MACRC,MAAM,MACN3C,OAAO,MACP4C,QAAQ,YACRC,KAAK,gBACD1D,GAPN,cAQE,iBACE0D,KAAK,eACLC,EAAE,8QCMV,EAlBgD,SAAC3D,GAC/C,OACE,gCACEsD,MAAM,6BACNC,QAAQ,MACRC,MAAM,MACN3C,OAAO,MACP4C,QAAQ,YACRC,KAAK,gBACD1D,GAPN,cAQE,iBACE0D,KAAK,eACLC,EAAE,uGCbV,EAAiC,kCAAjC,EAAmF,iCAAnF,EAA6H,0BAA7H,EAA8J,wBAA9J,EAAiM,4BAAjM,EAA2O,+BAA3O,EAAoR,2BAApR,EAAuT,yB,wCC+EvT,EAhEsC,SAAC,GAAe,IAcjC/B,EAdoBc,EAAY,EAAZA,MAC/BkB,GAAcrC,EAAAA,EAAAA,MAAdqC,UACFpC,GAAWhC,EAAAA,EAAAA,KAEXqE,GAAapD,EAAAA,EAAAA,cACjB,SAACqD,GACC,OAAa,OAATF,QAAS,IAATA,OAAA,EAAAA,EAAWG,cAAeD,EAAOC,WAC5BC,EAAAA,GAAAA,QAEH,GAAN,OAAUA,EAAAA,GAAAA,MAAV,YAA8BF,EAAOC,cAEvC,CAACH,IAOGK,GAAchC,EAAAA,EAAAA,UAAiB,WACnC,OAAgB,OAAT2B,QAAS,IAATA,OAAA,EAAAA,EAAWG,cAAerB,EAAMoB,OAAOC,aAC7C,CAACH,EAAWlB,EAAMoB,SAUrB,OACE,iBAAKhE,UAAWG,EAAhB,WACE,iBAAKH,UAAWG,EAAhB,WACE,SAAC,KAAD,CACEH,UAAWG,EACXiE,GAAIL,EAAWnB,EAAMoB,QAFvB,SAGGpB,EAAMyB,aAET,iBAAMrE,UAAWG,EAAjB,SAAgCyC,EAAM0B,YACrCH,IACC,iBAAKnE,UAAWG,EAAhB,WACE,mBAAQmD,QAnBA,SAACb,GACjB8B,MAAM,wBAkBE,UACE,SAAC,EAAD,OAEF,mBAAQjB,QAlBE,SAACb,GACnBf,EAASmB,EAAAA,GAAAA,YAA0BD,KAiB3B,UACE,SAAC,EAAD,aAKR,iBAAK5C,UAAWG,EAAhB,WACE,cAAGH,UAAWG,EAAd,SAAgCyC,EAAMhB,UACrCgB,EAAMd,QACL,UAAC,KAAD,CACE9B,UAAWG,EACXiE,IAzCStC,EAyCKc,EAAMd,MAxCtB,GAAN,OAAUoC,EAAAA,GAAAA,OAAV,YAA+BpC,IAsCzB,cAGIc,EAAMd,gBCvEpB,EAA8B,+BCwB9B,EAdsC,SAAC,GAAyB,IAAvB0C,EAAsB,EAAtBA,OAAQxC,EAAc,EAAdA,QAC/C,OACE,iBAAKhC,UAAWG,EAAhB,UACGqE,EAAOC,KAAI,SAAC7B,GAAD,OACV,SAAC,EAAD,CACEA,MAAOA,GACFA,EAAM8B,QAGd1C,IAAW,SAAC2C,EAAA,EAAD,S,wDCfNC,E,8BCJZ,GAAgB,IAAM,oBAAoB,eAAe,6BAA6B,aAAe,6BAA6B,iBAAiB,+BAA+B,YAAc,4BAA4B,SAAW,0B,wFDIvO,SAAYA,GAAAA,EAAAA,QAAAA,UAAAA,EAAAA,UAAAA,YAAZ,CAAYA,IAAAA,EAAAA,KAYZ,IA8CA,EA9CgC,SAAC,GAM1B,IALLC,EAKI,EALJA,SACA7E,EAII,EAJJA,UACAgC,EAGI,EAHJA,QAGI,IAFJ8C,QAAAA,OAEI,MAFMF,EAAeG,QAErB,EADD7E,GACC,YACE8E,GAASvE,EAAAA,EAAAA,QAA0B,MAEnCwE,GAAmB9C,EAAAA,EAAAA,UAAgB,WACvC,OAAOhC,EAAQ,QAAD,OAAS2E,MACtB,CAACA,IASJ,OAPA7D,EAAAA,EAAAA,YAAU,WACR,GAAI+D,EAAOnE,QAAS,CAClB,IAAMqE,EAAWF,EAAOnE,QAAQsE,YAChCH,EAAOnE,QAAQC,MAAM4C,MAArB,UAAgCwB,EAAhC,SAED,KAGD,mCACE5D,IAAK0D,GACD9E,GAFN,IAGEF,UAAW,CAACG,EAAAA,IAAa8E,EAAkBjF,GAAWI,KAAK,KAH7D,UAIE,SAACgF,EAAA,EAAD,CAAkBC,KAAK,SAAvB,UACE,SAACC,EAAA,EAAD,CACEC,eAAgB,SAACC,EAAmBC,GAClCD,EAAKtE,iBAAiB,gBAAiBuE,GAAM,IAG/CC,WAAW,OACXC,eAAa,EANf,SAOG3D,GACC,gBAAKhC,UAAWG,EAAAA,YAAhB,UACE,SAACyF,EAAA,EAAD,CAAY5F,UAAWG,EAAAA,kBAGzB,gBAAKH,UAAWG,EAAAA,SAAhB,SAAmC0E,KARhC7C,EAAU,SAAW,c,iEE9CpC,GAAgB,KAAO,uBAAuB,WAAa,6BAA6B,cAAgB,iC,UCiBxG,EAToC,SAAC,GAAkC,IAAhChC,EAA+B,EAA/BA,UAAW4B,EAAoB,EAApBA,QAAS3B,EAAW,EAAXA,KACzD,OACE,iBAAKD,UAAW,CAACG,EAAAA,KAAcH,GAAWI,KAAK,KAA/C,UACGH,IAAQ,SAACA,EAAD,CAAMD,UAAWG,EAAAA,cAC1B,iBAAMH,UAAWG,EAAAA,cAAjB,SAAyCyB,S,6ECZ/C,G,QAAA,CAAgB,MAAQ,uB,0BCexB,EAT8B,SAAC,GAA6B,IAA3B5B,EAA0B,EAA1BA,UAAcE,GAAY,YACzD,OACE,oCACMA,GADN,IAEEF,UAAW,CAACG,EAAAA,MAAeH,GAAWI,KAAK,U,uDCSjD,IAlB8C,SAACF,GAC7C,OACE,gCACEsD,MAAM,6BACNC,QAAQ,MACRC,MAAM,MACN3C,OAAO,MACP4C,QAAQ,YACRC,KAAK,gBACD1D,GAPN,cAQE,iBACE0D,KAAK,eACLC,EAAE,mP,gHCgBV,UAtBiB,WACf,IAAM7B,GAAUpC,EAAAA,EAAAA,IAAe,SAACiG,GAAD,OAAWA,EAAMrB,OAAOxC,WACjDwC,GAAS5E,EAAAA,EAAAA,GAAekG,EAAAA,GACxBpE,GAAWhC,EAAAA,EAAAA,KAQjB,OANAuB,EAAAA,EAAAA,YAAU,WAER,OADAS,EAASmB,EAAAA,GAAAA,aACF,WACLnB,EAASmB,EAAAA,GAAAA,UAAwB,QAElC,CAACnB,KAEF,iCACE,SAAC,IAAD,KACA,SAAC,IAAD,CACE8C,OAAQA,EACRxC,QAASA","sources":["hooks/useAppDispatch.ts","hooks/useAppSelector.ts","web3/constants.ts","webpack://solana-twitter-app/./src/components/IconInput/IconInput.module.scss?c05c","components/IconInput/IconInput.tsx","webpack://solana-twitter-app/./src/components/general/TextArea/TextArea.module.scss?147a","components/general/TextArea/TextArea.tsx","hooks/useAutoresizeTextarea.ts","webpack://solana-twitter-app/./src/components/TweetForm/TweetForm.module.scss?f896","components/TweetForm/TweetForm.tsx","components/icons/EditIcon.tsx","components/icons/DeleteIcon.tsx","webpack://solana-twitter-app/./src/components/TweetCard/TweetCard.module.scss?487b","components/TweetCard/TweetCard.tsx","webpack://solana-twitter-app/./src/components/TweetList/TweetList.module.scss?6e6b","components/TweetList/TweetList.tsx","components/general/Button/Button.tsx","webpack://solana-twitter-app/./src/components/general/Button/Button.module.scss?3d2a","webpack://solana-twitter-app/./src/components/general/DataItem/DataItem.module.scss?954a","components/general/DataItem/DataItem.tsx","webpack://solana-twitter-app/./src/components/general/Input/Input.module.scss?fef6","components/general/Input/Input.tsx","components/icons/HashIcon.tsx","pages/Home.tsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { AppDispatch } from '@/store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { RootState } from '@/store';\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","export const DEFAULT_PUBLIC_KEY_SEED = 0;\r\nexport const CONTENT_MAX_CHARS = 280;\r\nexport const TOPIC_MAX_CHARS = 50;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input__wrapper\":\"IconInput_input__wrapper__snYNX\",\"icon\":\"IconInput_icon__I71fy\",\"field\":\"IconInput_field__DwuCl\"};","import React, { ComponentPropsWithoutRef, FC, SVGProps } from 'react';\nimport Input from '@/components/general/Input/Input';\nimport classes from './IconInput.module.scss';\n\nexport interface IconInputProps extends ComponentPropsWithoutRef<'input'> {\n  className?: string;\n  Icon?: React.ComponentType<SVGProps<SVGSVGElement>>;\n}\n\nconst IconInput: FC<IconInputProps> = ({ className, Icon, ...props }) => {\n  return (\n    <div className={[classes.input__wrapper, className].join(' ')}>\n      {Icon && (\n        <Icon className={[classes.icon, props.disabled ? '!text-blue-500' : ''].join(' ')} />\n      )}\n      <Input\n        className={classes.field}\n        {...props}\n      />\n    </div>\n  );\n};\n\nexport default IconInput;\n","// extracted by mini-css-extract-plugin\nexport default {\"textarea\":\"TextArea_textarea__eB0cu\"};","import React, { ComponentPropsWithoutRef, FC, useRef } from 'react';\nimport classes from './TextArea.module.scss';\nimport { useAutoresizeTextarea } from '@/hooks/useAutoresizeTextarea';\n\nexport interface TextAreaProps extends ComponentPropsWithoutRef<'textarea'> {\n  className?: string;\n  autoresize?: boolean;\n}\n\nconst TextArea: FC<TextAreaProps> = ({ className, autoresize, ...props }) => {\n  const textAreaRef = useRef<HTMLTextAreaElement>(null);\n\n  useAutoresizeTextarea(autoresize ? textAreaRef : undefined);\n\n  return (\n    <textarea\n      ref={textAreaRef}\n      {...props}\n      className={[classes.textarea, className].join(' ')}\n    />\n  );\n};\n\nexport default TextArea;\n","import { RefObject, useCallback, useEffect } from 'react';\r\n\r\nexport const useAutoresizeTextarea = (textAreaRef?: RefObject<HTMLTextAreaElement>): void => {\r\n  const resizeTextarea = useCallback(() => {\r\n    const element = textAreaRef?.current;\r\n    if (!element) return;\r\n    element.style.height = 'auto';\r\n    element.style.height = element.scrollHeight + 'px';\r\n  }, [textAreaRef]);\r\n\r\n  useEffect(() => {\r\n    const element = textAreaRef?.current;\r\n    if (!element) return;\r\n\r\n    resizeTextarea();\r\n    element.addEventListener('input', resizeTextarea);\r\n    return () => {\r\n      element?.removeEventListener('input', resizeTextarea);\r\n    };\r\n  }, [resizeTextarea, textAreaRef]);\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form__wrapper\":\"TweetForm_form__wrapper__2kMtH\",\"form__footer\":\"TweetForm_form__footer__nPiA1\",\"topic\":\"TweetForm_topic__0Yyzd\",\"button\":\"TweetForm_button__n2Jop\",\"counter\":\"TweetForm_counter__8f62J\"};","import React, { FC, useEffect, useMemo, useState } from 'react';\nimport TextArea from '@/components/general/TextArea/TextArea';\nimport IconInput from '@/components/IconInput/IconInput';\nimport HashIcon from '@/components/icons/HashIcon';\nimport Button from '@/components/general/Button/Button';\nimport DataItem from '@/components/general/DataItem/DataItem';\nimport classes from './TweetForm.module.scss';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { useAppDispatch } from '@/hooks/useAppDispatch';\nimport { tweetsActions } from '@/store/reducers/tweets';\nimport { CONTENT_MAX_CHARS, TOPIC_MAX_CHARS } from '@/web3/constants';\nimport { sendTweet } from '@/web3';\n\nexport interface TweetFormProps {\n  className?: string;\n  forcedTopic?: string;\n}\n\nconst TweetForm: FC<TweetFormProps> = ({ className, forcedTopic }) => {\n  const { connected } = useWallet();\n  const dispatch = useAppDispatch();\n  const [content, setContent] = useState<string>('');\n  const [topic, setTopic] = useState<string>(forcedTopic || '');\n  const [loading, setLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    setTopic(forcedTopic || '');\n  }, [forcedTopic]);\n\n  const handleTextChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setContent(e.target.value);\n  };\n\n  const handleTopicChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTopic(e.target.value);\n  };\n\n  const charsLeft = useMemo<number>(() => {\n    return CONTENT_MAX_CHARS - content.length;\n  }, [content]);\n\n  const charsLeftColor = useMemo<string>(() => {\n    if (charsLeft < 0) return 'text-red-500';\n    if (charsLeft <= 10) return 'text-yellow-500';\n    return 'text-gray-400';\n  }, [charsLeft]);\n\n  const topicDisabled = useMemo<boolean>(() => {\n    return !!forcedTopic;\n  }, [forcedTopic]);\n\n  const sendDisabled = useMemo<boolean>(() => {\n    return !content.length || charsLeft < 0;\n  }, [content, charsLeft]);\n\n  const send = async (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n\n    if (loading) return;\n\n    try {\n      setLoading(true);\n      const tweet = await sendTweet(content, topic);\n      dispatch(tweetsActions.addTweet(tweet));\n      setContent('');\n      setTopic(forcedTopic || '');\n    } catch (error) {\n      // TODO: show error\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!connected) {\n    return <DataItem content={'Connect your wallet to start tweeting...'} />;\n  }\n\n  return (\n    <form className={[classes.form__wrapper, className].join(' ')}>\n      <TextArea\n        autoresize\n        placeholder=\"What's happening?\"\n        value={content}\n        onChange={handleTextChange}\n      />\n      <div className={classes.form__footer}>\n        <IconInput\n          className={classes.topic}\n          Icon={HashIcon}\n          maxLength={TOPIC_MAX_CHARS}\n          disabled={topicDisabled}\n          value={topic}\n          onChange={handleTopicChange}\n        />\n        <div className={classes.button}>\n          <span className={[classes.counter, charsLeftColor].join(' ')}>{charsLeft} left</span>\n          <Button\n            disabled={sendDisabled}\n            loading={loading}\n            onClick={send}>\n            Tweet\n          </Button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default TweetForm;\n","import React, { FC, SVGProps } from 'react';\n\nconst EditIcon: FC<SVGProps<SVGSVGElement>> = (props) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      version=\"1.1\"\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 24 24\"\n      fill=\"currentColor\"\n      {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M5,3C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19H5V5H12V3H5M17.78,4C17.61,4 17.43,4.07 17.3,4.2L16.08,5.41L18.58,7.91L19.8,6.7C20.06,6.44 20.06,6 19.8,5.75L18.25,4.2C18.12,4.07 17.95,4 17.78,4M15.37,6.12L8,13.5V16H10.5L17.87,8.62L15.37,6.12Z\"\n      />\n    </svg>\n  );\n};\n\nexport default EditIcon;\n","import React, { FC, SVGProps } from 'react';\n\nconst DeleteIcon: FC<SVGProps<SVGSVGElement>> = (props) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      version=\"1.1\"\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 24 24\"\n      fill=\"currentColor\"\n      {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M9,3V4H4V6H5V19A2,2 0 0,0 7,21H17A2,2 0 0,0 19,19V6H20V4H15V3H9M9,8H11V17H9V8M13,8H15V17H13V8Z\"\n      />\n    </svg>\n  );\n};\n\nexport default DeleteIcon;\n","// extracted by mini-css-extract-plugin\nexport default {\"tweet__wrapper\":\"TweetCard_tweet__wrapper__hIiC2\",\"tweet__header\":\"TweetCard_tweet__header__jQGp1\",\"author\":\"TweetCard_author__XIXl9\",\"date\":\"TweetCard_date__WvyVC\",\"controls\":\"TweetCard_controls__4ShKX\",\"tweet__body\":\"TweetCard_tweet__body__V-vwr\",\"content\":\"TweetCard_content__MUB0l\",\"topic\":\"TweetCard_topic__vvt95\"};","import React, { FC, useCallback, useMemo } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport EditIcon from '@/components/icons/EditIcon';\nimport DeleteIcon from '@/components/icons/DeleteIcon';\nimport classes from './TweetCard.module.scss';\nimport { ITweet } from '@/models/tweet';\nimport { PublicKey } from '@solana/web3.js';\nimport { RoutePaths } from '@/router';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { useAppDispatch } from '@/hooks/useAppDispatch';\nimport { tweetsActions } from '@/store/reducers/tweets';\n\nexport interface TweetCardProps {\n  tweet: ITweet;\n}\n\nconst TweetCard: FC<TweetCardProps> = ({ tweet }) => {\n  const { publicKey } = useWallet();\n  const dispatch = useAppDispatch();\n\n  const authorLink = useCallback(\n    (author: PublicKey): string => {\n      if (publicKey?.toBase58() === author.toBase58()) {\n        return RoutePaths.PROFILE;\n      }\n      return `${RoutePaths.USERS}/${author.toBase58()}`;\n    },\n    [publicKey]\n  );\n\n  const topicLink = (topic: string): string => {\n    return `${RoutePaths.TOPICS}/${topic}`;\n  };\n\n  const isSelfTweet = useMemo<boolean>(() => {\n    return publicKey?.toBase58() === tweet.author.toBase58();\n  }, [publicKey, tweet.author]);\n\n  const editTweet = (e: React.MouseEvent<HTMLButtonElement>) => {\n    alert('Work in progress...');\n  };\n\n  const deleteTweet = (e: React.MouseEvent<HTMLButtonElement>) => {\n    dispatch(tweetsActions.deleteTweet(tweet));\n  };\n\n  return (\n    <div className={classes.tweet__wrapper}>\n      <div className={classes.tweet__header}>\n        <NavLink\n          className={classes.author}\n          to={authorLink(tweet.author)}>\n          {tweet.authorKey}\n        </NavLink>\n        <span className={classes.date}>{tweet.createdAt}</span>\n        {isSelfTweet && (\n          <div className={classes.controls}>\n            <button onClick={editTweet}>\n              <EditIcon />\n            </button>\n            <button onClick={deleteTweet}>\n              <DeleteIcon />\n            </button>\n          </div>\n        )}\n      </div>\n      <div className={classes.tweet__body}>\n        <p className={classes.content}>{tweet.content}</p>\n        {tweet.topic && (\n          <NavLink\n            className={classes.topic}\n            to={topicLink(tweet.topic)}>\n            #{tweet.topic}\n          </NavLink>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TweetCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"tweet__list\":\"TweetList_tweet__list__1e2VC\"};","import React, { FC } from 'react';\nimport { ITweet } from '@/models/tweet';\nimport Loading from '@/components/Loading';\nimport TweetCard from '@/components/TweetCard/TweetCard';\nimport classes from './TweetList.module.scss';\n\nexport interface TweetListProps {\n  tweets: ITweet[];\n  loading: boolean;\n}\n\nconst TweetList: FC<TweetListProps> = ({ tweets, loading }) => {\n  return (\n    <div className={classes.tweet__list}>\n      {tweets.map((tweet) => (\n        <TweetCard\n          tweet={tweet}\n          key={tweet.key}\n        />\n      ))}\n      {loading && <Loading />}\n    </div>\n  );\n};\n\nexport default TweetList;\n","import React, { FC, ComponentPropsWithoutRef, useMemo, useRef, useEffect } from 'react';\nimport classes from './Button.module.scss';\nimport LoaderIcon from '@/components/icons/LoaderIcon';\nimport { SwitchTransition, CSSTransition } from 'react-transition-group';\n\nexport enum ButtonVariants {\n  PRIMARY = 'primary',\n  SECONDARY = 'secondary'\n}\n\nexport interface ButtonProps extends ComponentPropsWithoutRef<'button'> {\n  children?: React.ReactNode;\n  className?: string;\n  loading?: boolean;\n  variant?: ButtonVariants;\n}\n\nconst Button: FC<ButtonProps> = ({\n  children,\n  className,\n  loading,\n  variant = ButtonVariants.PRIMARY,\n  ...props\n}) => {\n  const btnRef = useRef<HTMLButtonElement>(null);\n\n  const variantClassName = useMemo<string>(() => {\n    return classes[`btn--${variant}`];\n  }, [variant]);\n\n  useEffect(() => {\n    if (btnRef.current) {\n      const btnWidth = btnRef.current.offsetWidth;\n      btnRef.current.style.width = `${btnWidth}px`;\n    }\n  }, []);\n\n  return (\n    <button\n      ref={btnRef}\n      {...props}\n      className={[classes.btn, variantClassName, className].join(' ')}>\n      <SwitchTransition mode=\"out-in\">\n        <CSSTransition\n          addEndListener={(node: HTMLElement, done: () => void) => {\n            node.addEventListener('transitionend', done, false);\n          }}\n          key={loading ? 'loader' : 'btn'}\n          classNames=\"fade\"\n          unmountOnExit>\n          {loading ? (\n            <div className={classes.btn__loader}>\n              <LoaderIcon className={classes.loader_color} />\n            </div>\n          ) : (\n            <div className={classes.btn__txt}>{children}</div>\n          )}\n        </CSSTransition>\n      </SwitchTransition>\n    </button>\n  );\n};\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__Nl0XW\",\"btn--primary\":\"Button_btn--primary__wQaO+\",\"loader_color\":\"Button_loader_color__uKVIQ\",\"btn--secondary\":\"Button_btn--secondary__-FVi7\",\"btn__loader\":\"Button_btn__loader__M8Ir4\",\"btn__txt\":\"Button_btn__txt__1DO3e\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"DataItem_item__Eym0s\",\"item__icon\":\"DataItem_item__icon__MRwjp\",\"item__content\":\"DataItem_item__content__3Imge\"};","import React, { FC, SVGProps } from 'react';\nimport classes from './DataItem.module.scss';\n\nexport interface DataItemProps {\n  className?: string;\n  content?: string;\n  Icon?: React.ComponentType<SVGProps<SVGSVGElement>>;\n}\n\nconst DataItem: FC<DataItemProps> = ({ className, content, Icon }) => {\n  return (\n    <div className={[classes.item, className].join(' ')}>\n      {Icon && <Icon className={classes.item__icon} />}\n      <span className={classes.item__content}>{content}</span>\n    </div>\n  );\n};\n\nexport default DataItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Input_input__+UP2D\"};","import React, { ComponentPropsWithoutRef, FC } from 'react';\nimport classes from './Input.module.scss';\n\nexport interface InputProps extends ComponentPropsWithoutRef<'input'> {\n  className?: string;\n}\n\nconst Input: FC<InputProps> = ({ className, ...props }) => {\n  return (\n    <input\n      {...props}\n      className={[classes.input, className].join(' ')}\n    />\n  );\n};\n\nexport default Input;\n","import React, { FC, SVGProps } from 'react';\n\nconst HashIcon: FC<SVGProps<SVGSVGElement>> = (props) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      version=\"1.1\"\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 24 24\"\n      fill=\"currentColor\"\n      {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M5.41,21L6.12,17H2.12L2.47,15H6.47L7.53,9H3.53L3.88,7H7.88L8.59,3H10.59L9.88,7H15.88L16.59,3H18.59L17.88,7H21.88L21.53,9H17.53L16.47,15H20.47L20.12,17H16.12L15.41,21H13.41L14.12,17H8.12L7.41,21H5.41M9.53,9L8.47,15H14.47L15.53,9H9.53Z\"\n      />\n    </svg>\n  );\n};\n\nexport default HashIcon;\n","import React, { FC, useEffect } from 'react';\nimport TweetForm from '@/components/TweetForm/TweetForm';\nimport TweetList from '@/components/TweetList/TweetList';\nimport { useAppSelector } from '@/hooks/useAppSelector';\nimport { useAppDispatch } from '@/hooks/useAppDispatch';\nimport { tweetsActions } from '@/store/reducers/tweets';\nimport { selectSortedTweets } from '@/store/reducers/tweets/selectors';\n\nconst Home: FC = () => {\n  const loading = useAppSelector((state) => state.tweets.loading);\n  const tweets = useAppSelector(selectSortedTweets);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(tweetsActions.getTweets());\n    return () => {\n      dispatch(tweetsActions.setTweets([]));\n    };\n  }, [dispatch]);\n  return (\n    <>\n      <TweetForm />\n      <TweetList\n        tweets={tweets}\n        loading={loading}\n      />\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","CONTENT_MAX_CHARS","TOPIC_MAX_CHARS","className","Icon","props","classes","join","disabled","Input","autoresize","textAreaRef","useRef","resizeTextarea","useCallback","element","current","style","height","scrollHeight","useEffect","addEventListener","removeEventListener","useAutoresizeTextarea","undefined","ref","forcedTopic","connected","useWallet","dispatch","useState","content","setContent","topic","setTopic","loading","setLoading","charsLeft","useMemo","length","charsLeftColor","topicDisabled","sendDisabled","send","e","preventDefault","sendTweet","tweet","tweetsActions","placeholder","value","onChange","target","IconInput","HashIcon","maxLength","Button","onClick","DataItem","xmlns","version","width","viewBox","fill","d","publicKey","authorLink","author","toBase58","RoutePaths","isSelfTweet","to","authorKey","createdAt","alert","tweets","map","key","Loading","ButtonVariants","children","variant","PRIMARY","btnRef","variantClassName","btnWidth","offsetWidth","SwitchTransition","mode","CSSTransition","addEndListener","node","done","classNames","unmountOnExit","LoaderIcon","state","selectSortedTweets"],"sourceRoot":""}