{"version":3,"file":"static/js/163.15412ca1.chunk.js","mappings":"gKAKYA,E,8BCJZ,GAAgB,IAAM,oBAAoB,eAAe,6BAA6B,aAAe,6BAA6B,iBAAiB,+BAA+B,YAAc,4BAA4B,SAAW,0B,wFDIvO,SAAYA,GAAAA,EAAAA,QAAAA,UAAAA,EAAAA,UAAAA,YAAZ,CAAYA,IAAAA,EAAAA,KAYZ,IA8CA,EA9CgC,SAAC,GAM1B,IALLC,EAKI,EALJA,SACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,QAGI,IAFJC,QAAAA,OAEI,MAFMJ,EAAeK,QAErB,EADDC,GACC,YACEC,GAASC,EAAAA,EAAAA,QAA0B,MAEnCC,GAAmBC,EAAAA,EAAAA,UAAgB,WACvC,OAAOC,EAAQ,QAAD,OAASP,MACtB,CAACA,IASJ,OAPAQ,EAAAA,EAAAA,YAAU,WACR,GAAIL,EAAOM,QAAS,CAClB,IAAMC,EAAWP,EAAOM,QAAQE,YAChCR,EAAOM,QAAQG,MAAMC,MAArB,UAAgCH,EAAhC,SAED,KAGD,mCACEI,IAAKX,GACDD,GAFN,IAGEJ,UAAW,CAACS,EAAAA,IAAaF,EAAkBP,GAAWiB,KAAK,KAH7D,UAIE,SAACC,EAAA,EAAD,CAAkBC,KAAK,SAAvB,UACE,SAACC,EAAA,EAAD,CACEC,eAAgB,SAACC,EAAmBC,GAClCD,EAAKE,iBAAiB,gBAAiBD,GAAM,IAG/CE,WAAW,OACXC,eAAa,EANf,SAOGzB,GACC,gBAAKD,UAAWS,EAAAA,YAAhB,UACE,SAACkB,EAAA,EAAD,CAAY3B,UAAWS,EAAAA,kBAGzB,gBAAKT,UAAWS,EAAAA,SAAhB,SAAmCV,KARhCE,EAAU,SAAW,c,uDE5BpC,IAjB6C,SAACG,GAC5C,OACE,gCACEwB,MAAM,6BACNC,QAAQ,MACRd,MAAM,MACNe,OAAO,MACPC,QAAQ,aACJ3B,GANN,cAOE,iBACE4B,KAAK,eACLC,EAAE,+V,8GCZV,GAAgB,MAAQ,sB,0BCexB,EAT8B,SAAC,GAA6B,IAA3BjC,EAA0B,EAA1BA,UAAcI,GAAY,YACzD,OACE,oCACMA,GADN,IAEEJ,UAAW,CAACS,EAAAA,MAAeT,GAAWiB,KAAK,S,SCVjD,GAAgB,cAAgB,iCAAiC,aAAe,gCAAgC,UAAY,6BAA6B,YAAc,+BAA+B,UAAY,8B,UCsDlN,EA7CsC,SAAC,GAAmB,IAAjBjB,EAAgB,EAAhBA,UACvC,GAA8BkC,EAAAA,EAAAA,WAAkB,GAAhD,eAAOjC,EAAP,KAAgBkC,EAAhB,KACA,GAAsBD,EAAAA,EAAAA,UAAiB,IAAvC,eAAOE,EAAP,KAAYC,EAAZ,KAMMC,GAAe9B,EAAAA,EAAAA,UAAiB,WACpC,OAAQ4B,EAAIG,SACX,CAACH,IAaJ,OACE,kBAAMpC,UAAW,CAACS,EAAAA,cAAuBT,GAAWiB,KAAK,KAAzD,WACE,gBAAKjB,UAAWS,EAAAA,aAAhB,UACE,SAAC+B,EAAA,EAAD,CAASxC,UAAWS,EAAAA,eAEtB,SAAC,EAAD,CACET,UAAWS,EAAAA,YACXgC,YAAY,aACZC,MAAON,EACPO,SA5BmB,SAACC,GACxBP,EAAOO,EAAEC,OAAOH,WA6Bd,SAACI,EAAA,EAAD,CACEC,SAAUT,EACVtC,UAAWS,EAAAA,UACXR,QAASA,EACT+C,QA1BO,SAACJ,GACZA,EAAEK,iBAEFC,QAAQC,IAAI,OAAQf,GACpBD,GAAW,GACXiB,YAAW,WACTf,EAAO,IACPF,GAAW,KACV,MAcD,sBCjCN,EARkB,WAChB,OACE,+BACE,SAAC,EAAD","sources":["components/general/Button/Button.tsx","webpack://solana-twitter-app/./src/components/general/Button/Button.module.scss?3d2a","components/icons/KeyIcon.tsx","webpack://solana-twitter-app/./src/components/general/Input/Input.module.scss?fef6","components/general/Input/Input.tsx","webpack://solana-twitter-app/./src/components/UsersForm/UsersForm.module.scss?feda","components/UsersForm/UsersForm.tsx","pages/Users.tsx"],"sourcesContent":["import React, { FC, ComponentPropsWithoutRef, useMemo, useRef, useEffect } from 'react';\nimport classes from './Button.module.scss';\nimport LoaderIcon from '@/components/icons/LoaderIcon';\nimport { SwitchTransition, CSSTransition } from 'react-transition-group';\n\nexport enum ButtonVariants {\n  PRIMARY = 'primary',\n  SECONDARY = 'secondary'\n}\n\nexport interface ButtonProps extends ComponentPropsWithoutRef<'button'> {\n  children?: React.ReactNode;\n  className?: string;\n  loading?: boolean;\n  variant?: ButtonVariants;\n}\n\nconst Button: FC<ButtonProps> = ({\n  children,\n  className,\n  loading,\n  variant = ButtonVariants.PRIMARY,\n  ...props\n}) => {\n  const btnRef = useRef<HTMLButtonElement>(null);\n\n  const variantClassName = useMemo<string>(() => {\n    return classes[`btn--${variant}`];\n  }, [variant]);\n\n  useEffect(() => {\n    if (btnRef.current) {\n      const btnWidth = btnRef.current.offsetWidth;\n      btnRef.current.style.width = `${btnWidth}px`;\n    }\n  }, []);\n\n  return (\n    <button\n      ref={btnRef}\n      {...props}\n      className={[classes.btn, variantClassName, className].join(' ')}>\n      <SwitchTransition mode=\"out-in\">\n        <CSSTransition\n          addEndListener={(node: HTMLElement, done: () => void) => {\n            node.addEventListener('transitionend', done, false);\n          }}\n          key={loading ? 'loader' : 'btn'}\n          classNames=\"fade\"\n          unmountOnExit>\n          {loading ? (\n            <div className={classes.btn__loader}>\n              <LoaderIcon className={classes.loader_color} />\n            </div>\n          ) : (\n            <div className={classes.btn__txt}>{children}</div>\n          )}\n        </CSSTransition>\n      </SwitchTransition>\n    </button>\n  );\n};\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__Nl0XW\",\"btn--primary\":\"Button_btn--primary__wQaO+\",\"loader_color\":\"Button_loader_color__uKVIQ\",\"btn--secondary\":\"Button_btn--secondary__-FVi7\",\"btn__loader\":\"Button_btn__loader__M8Ir4\",\"btn__txt\":\"Button_btn__txt__1DO3e\"};","import React, { FC, SVGProps } from 'react';\n\nconst KeyIcon: FC<SVGProps<SVGSVGElement>> = (props) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      version=\"1.1\"\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 24 24\"\n      {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M21 18H15V15H13.3C12.2 17.4 9.7 19 7 19C3.1 19 0 15.9 0 12S3.1 5 7 5C9.7 5 12.2 6.6 13.3 9H24V15H21V18M17 16H19V13H22V11H11.9L11.7 10.3C11 8.3 9.1 7 7 7C4.2 7 2 9.2 2 12S4.2 17 7 17C9.1 17 11 15.7 11.7 13.7L11.9 13H17V16M7 15C5.3 15 4 13.7 4 12S5.3 9 7 9 10 10.3 10 12 8.7 15 7 15M7 11C6.4 11 6 11.4 6 12S6.4 13 7 13 8 12.6 8 12 7.6 11 7 11Z\"\n      />\n    </svg>\n  );\n};\n\nexport default KeyIcon;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Input_input__+UP2D\"};","import React, { ComponentPropsWithoutRef, FC } from 'react';\nimport classes from './Input.module.scss';\n\nexport interface InputProps extends ComponentPropsWithoutRef<'input'> {\n  className?: string;\n}\n\nconst Input: FC<InputProps> = ({ className, ...props }) => {\n  return (\n    <input\n      {...props}\n      className={[classes.input, className].join(' ')}\n    />\n  );\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nexport default {\"form__wrapper\":\"UsersForm_form__wrapper__+DdGz\",\"key__wrapper\":\"UsersForm_key__wrapper__O-cQm\",\"key__icon\":\"UsersForm_key__icon__el3a0\",\"form__input\":\"UsersForm_form__input__5U-uD\",\"form__btn\":\"UsersForm_form__btn__tMKt5\"};","import React, { FC, useMemo, useState } from 'react';\nimport Input from '@/components/general/Input/Input';\nimport Button from '@/components/general/Button/Button';\nimport classes from './UsersForm.module.scss';\nimport KeyIcon from '@/components/icons/KeyIcon';\n\nexport interface UsersFormProps {\n  className?: string;\n}\n\nconst UsersForm: FC<UsersFormProps> = ({ className }) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [key, setKey] = useState<string>('');\n\n  const handleTextChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setKey(e.target.value);\n  };\n\n  const findDisabled = useMemo<boolean>(() => {\n    return !key.length;\n  }, [key]);\n\n  const find = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n\n    console.log('find', key);\n    setLoading(true);\n    setTimeout(() => {\n      setKey('');\n      setLoading(false);\n    }, 1000);\n  };\n\n  return (\n    <form className={[classes.form__wrapper, className].join(' ')}>\n      <div className={classes.key__wrapper}>\n        <KeyIcon className={classes.key__icon} />\n      </div>\n      <Input\n        className={classes.form__input}\n        placeholder=\"Public key\"\n        value={key}\n        onChange={handleTextChange}\n      />\n      <Button\n        disabled={findDisabled}\n        className={classes.form__btn}\n        loading={loading}\n        onClick={find}>\n        Find\n      </Button>\n    </form>\n  );\n};\n\nexport default UsersForm;\n","import React, { FC } from 'react';\nimport UsersForm from '@/components/UsersForm/UsersForm';\n\nconst Users: FC = () => {\n  return (\n    <>\n      <UsersForm />\n    </>\n  );\n};\n\nexport default Users;\n"],"names":["ButtonVariants","children","className","loading","variant","PRIMARY","props","btnRef","useRef","variantClassName","useMemo","classes","useEffect","current","btnWidth","offsetWidth","style","width","ref","join","SwitchTransition","mode","CSSTransition","addEndListener","node","done","addEventListener","classNames","unmountOnExit","LoaderIcon","xmlns","version","height","viewBox","fill","d","useState","setLoading","key","setKey","findDisabled","length","KeyIcon","placeholder","value","onChange","e","target","Button","disabled","onClick","preventDefault","console","log","setTimeout"],"sourceRoot":""}