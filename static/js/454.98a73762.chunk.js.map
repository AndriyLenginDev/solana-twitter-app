{"version":3,"file":"static/js/454.98a73762.chunk.js","mappings":"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","sources":["hooks/useAppDispatch.ts","hooks/useAppSelector.ts","hooks/useCharsLimit.ts","hooks/usePaginatedTweets.ts","web3/constants.ts","webpack://solana-twitter-app/./src/components/IconInput/IconInput.module.scss?c05c","components/IconInput/IconInput.tsx","webpack://solana-twitter-app/./src/components/TweetCard/TweetCard.module.scss?487b","webpack://solana-twitter-app/./src/components/TweetControls/TweetControls.module.scss?ee56","components/icons/EditIcon.tsx","components/icons/DeleteIcon.tsx","webpack://solana-twitter-app/./src/components/UpdateTweetModal/UpdateTweetModal.module.scss?c94e","webpack://solana-twitter-app/./src/components/general/Modal/Modal.module.scss?1315","components/general/Modal/Modal.tsx","components/icons/CloseIcon.tsx","webpack://solana-twitter-app/./src/components/UpdateTweetForm/UpdateTweetForm.module.scss?d700","components/UpdateTweetForm/UpdateTweetForm.tsx","components/UpdateTweetModal/UpdateTweetModal.tsx","components/TweetControls/TweetControls.tsx","hooks/useModal.ts","webpack://solana-twitter-app/./src/components/TweetFooter/TweetFooter.module.scss?bb78","components/icons/HeartIcon.tsx","components/icons/HeartOutlineIcon.tsx","models/like.ts","components/TweetFooter/TweetFooter.tsx","components/TweetCard/TweetCard.tsx","webpack://solana-twitter-app/./src/components/TweetList/TweetList.module.scss?6e6b","components/TweetList/TweetList.tsx","hooks/useObserver.ts","components/general/Button/Button.tsx","webpack://solana-twitter-app/./src/components/general/Button/Button.module.scss?3d2a","webpack://solana-twitter-app/./src/components/general/DataItem/DataItem.module.scss?954a","components/general/DataItem/DataItem.tsx","webpack://solana-twitter-app/./src/components/general/Input/Input.module.scss?fef6","components/general/Input/Input.tsx","webpack://solana-twitter-app/./src/components/general/TextArea/TextArea.module.scss?147a","components/general/TextArea/TextArea.tsx","hooks/useAutoresizeTextarea.ts","components/icons/HashIcon.tsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { AppDispatch } from '@/store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { RootState } from '@/store';\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { useMemo } from 'react';\n\ninterface CharsLimit {\n  charsLeft: number;\n  charsLeftClass: string;\n}\n\nexport const useCharsLimit = (content: string, limit: number): CharsLimit => {\n  const charsLeft = useMemo<number>(() => {\n    return limit - content.length;\n  }, [content.length, limit]);\n\n  const charsLeftClass = useMemo<string>(() => {\n    if (charsLeft < 0) return 'text-red-500';\n    if (charsLeft <= 10) return 'text-yellow-500';\n    return 'text-gray-400';\n  }, [charsLeft]);\n\n  return {\n    charsLeft,\n    charsLeftClass\n  };\n};\n","import { useCallback, useEffect, useMemo } from 'react';\nimport { useAppDispatch } from '@/hooks/useAppDispatch';\nimport { tweetsActions } from '@/store/reducers/tweets';\nimport { MemcmpFilter } from '@solana/web3.js';\n\nexport type PageFilter = (...args: any) => MemcmpFilter;\n\nexport interface PaginatedTweetsResult {\n  onNewPage: () => void;\n}\n\nexport const usePaginatedTweets = (\n  filter?: PageFilter,\n  param?: string,\n  paramRequired?: boolean\n): PaginatedTweetsResult => {\n  const dispatch = useAppDispatch();\n  const cachedFilter = useMemo<MemcmpFilter[] | undefined>(() => {\n    if (filter && param) {\n      return [filter(param)];\n    }\n    return [];\n  }, [filter, param]);\n\n  const onNewPage = useCallback(() => {\n    if (paramRequired) {\n      if (param) {\n        dispatch(tweetsActions.getTweetsNextPage(cachedFilter));\n      }\n    } else {\n      dispatch(tweetsActions.getTweetsNextPage(cachedFilter));\n    }\n  }, [paramRequired, dispatch, cachedFilter, param]);\n\n  useEffect(() => {\n    if (paramRequired) {\n      if (param) {\n        dispatch(tweetsActions.getTweets(cachedFilter));\n      }\n    } else {\n      dispatch(tweetsActions.getTweets(cachedFilter));\n    }\n    return () => {\n      dispatch(tweetsActions.setTweets([]));\n    };\n  }, [paramRequired, dispatch, cachedFilter, param]);\n\n  return { onNewPage };\n};\n","export const DEFAULT_PUBLIC_KEY_SEED = 0;\r\nexport const CONTENT_MAX_CHARS = 280;\r\nexport const TOPIC_MAX_CHARS = 50;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input__wrapper\":\"IconInput_input__wrapper__snYNX\",\"icon\":\"IconInput_icon__I71fy\",\"field\":\"IconInput_field__DwuCl\"};","import React, { ComponentPropsWithoutRef, FC, SVGProps } from 'react';\nimport Input from '@/components/general/Input/Input';\nimport classes from './IconInput.module.scss';\n\nexport interface IconInputProps extends ComponentPropsWithoutRef<'input'> {\n  className?: string;\n  Icon?: React.ComponentType<SVGProps<SVGSVGElement>>;\n}\n\nconst IconInput: FC<IconInputProps> = ({ className, Icon, ...props }) => {\n  return (\n    <div className={[classes.input__wrapper, className].join(' ')}>\n      {Icon && (\n        <Icon className={[classes.icon, props.disabled ? '!text-blue-500' : ''].join(' ')} />\n      )}\n      <Input\n        className={classes.field}\n        {...props}\n      />\n    </div>\n  );\n};\n\nexport default IconInput;\n","// extracted by mini-css-extract-plugin\nexport default {\"tweet__wrapper\":\"TweetCard_tweet__wrapper__hIiC2\",\"tweet__header\":\"TweetCard_tweet__header__jQGp1\",\"author\":\"TweetCard_author__XIXl9\",\"date\":\"TweetCard_date__WvyVC\",\"tweet__body\":\"TweetCard_tweet__body__V-vwr\",\"content\":\"TweetCard_content__MUB0l\"};","// extracted by mini-css-extract-plugin\nexport default {\"controls__wrapper\":\"TweetControls_controls__wrapper__92WtL\"};","import React, { FC, SVGProps } from 'react';\n\nconst EditIcon: FC<SVGProps<SVGSVGElement>> = (props) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      version=\"1.1\"\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 24 24\"\n      fill=\"currentColor\"\n      {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M5,3C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19H5V5H12V3H5M17.78,4C17.61,4 17.43,4.07 17.3,4.2L16.08,5.41L18.58,7.91L19.8,6.7C20.06,6.44 20.06,6 19.8,5.75L18.25,4.2C18.12,4.07 17.95,4 17.78,4M15.37,6.12L8,13.5V16H10.5L17.87,8.62L15.37,6.12Z\"\n      />\n    </svg>\n  );\n};\n\nexport default EditIcon;\n","import React, { FC, SVGProps } from 'react';\n\nconst DeleteIcon: FC<SVGProps<SVGSVGElement>> = (props) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      version=\"1.1\"\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 24 24\"\n      fill=\"currentColor\"\n      {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M9,3V4H4V6H5V19A2,2 0 0,0 7,21H17A2,2 0 0,0 19,19V6H20V4H15V3H9M9,8H11V17H9V8M13,8H15V17H13V8Z\"\n      />\n    </svg>\n  );\n};\n\nexport default DeleteIcon;\n","// extracted by mini-css-extract-plugin\nexport default {\"modal__wrapper\":\"UpdateTweetModal_modal__wrapper__qDOrg\",\"modal__header\":\"UpdateTweetModal_modal__header__PuKRb\",\"cancel\":\"UpdateTweetModal_cancel__OiWYr\"};","// extracted by mini-css-extract-plugin\nexport default {\"modal__backdrop\":\"Modal_modal__backdrop__2Z3VS\",\"modal__content\":\"Modal_modal__content__GUBXv\"};","import React, { FC } from 'react';\nimport { createPortal } from 'react-dom';\nimport classes from './Modal.module.scss';\nimport { stopPropagation } from '@/utils/helpers';\n\nexport interface ModalProps {\n  isOpen: boolean;\n  close: () => void;\n  children?: React.ReactNode;\n}\n\nconst Modal: FC<ModalProps> = ({ isOpen, close, children }) =>\n  isOpen\n    ? createPortal(\n        <div\n          className={classes.modal__backdrop}\n          onClick={() => close()}>\n          <div\n            className={classes.modal__content}\n            onClick={stopPropagation}>\n            {children}\n          </div>\n        </div>,\n        document.body\n      )\n    : null;\n\nexport default Modal;\n","import React, { FC, SVGProps } from 'react';\n\nconst CloseIcon: FC<SVGProps<SVGSVGElement>> = (props) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      version=\"1.1\"\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 24 24\"\n      fill=\"currentColor\"\n      {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\"\n      />\n    </svg>\n  );\n};\n\nexport default CloseIcon;\n","// extracted by mini-css-extract-plugin\nexport default {\"form__wrapper\":\"UpdateTweetForm_form__wrapper__BFBpL\",\"form__header\":\"UpdateTweetForm_form__header__WibyX\",\"cancel\":\"UpdateTweetForm_cancel__+9+nr\",\"form__footer\":\"UpdateTweetForm_form__footer__XaW-3\",\"topic\":\"UpdateTweetForm_topic__-7j8D\",\"button\":\"UpdateTweetForm_button__NQuuh\",\"counter\":\"UpdateTweetForm_counter__3dH33\"};","import React, { FC, useMemo, useState } from 'react';\nimport TextArea from '@/components/general/TextArea/TextArea';\nimport IconInput from '@/components/IconInput/IconInput';\nimport HashIcon from '@/components/icons/HashIcon';\nimport Button from '@/components/general/Button/Button';\nimport DataItem from '@/components/general/DataItem/DataItem';\nimport classes from './UpdateTweetForm.module.scss';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { useAppDispatch } from '@/hooks/useAppDispatch';\nimport { useCharsLimit } from '@/hooks/useCharsLimit';\nimport { tweetsActions } from '@/store/reducers/tweets';\nimport { CONTENT_MAX_CHARS, TOPIC_MAX_CHARS } from '@/web3/constants';\nimport { updateTweet } from '@/web3';\nimport { ITweet } from '@/models/tweet';\n\ninterface UpdateTweetModalProps  {\n  tweet: ITweet;\n  onFinish: () => any;\n}\n\nconst UpdateTweetForm: FC<UpdateTweetModalProps> = ({ tweet, onFinish }) => {\n  const { connected } = useWallet();\n  const dispatch = useAppDispatch();\n  const [tweetData, setTweetData] = useState<ITweet>(tweet || {});\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const handleTextChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setTweetData({ ...tweetData, content: e.target.value });\n  };\n\n  const handleTopicChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTweetData({ ...tweetData, topic: e.target.value });\n  };\n\n  const { charsLeft, charsLeftClass } = useCharsLimit(tweetData.content, CONTENT_MAX_CHARS);\n\n  const sendDisabled = useMemo<boolean>(() => {\n    return !tweetData.content.length || charsLeft < 0;\n  }, [tweetData.content, charsLeft]);\n\n  const send = async (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n\n    if (loading) return;\n\n    try {\n      setLoading(true);\n      const updatedTweet = await updateTweet(tweet, tweetData.topic, tweetData.content);\n      dispatch(tweetsActions.updateTweet(updatedTweet));\n      onFinish();\n    } catch (error) {\n      // TODO: show error\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!connected) {\n    return <DataItem content={'Connect your wallet to start tweeting...'} />;\n  }\n\n  return (\n    <form className={classes.form__wrapper}>\n      <TextArea\n        autoresize\n        placeholder=\"What's happening?\"\n        value={tweetData.content}\n        onChange={handleTextChange}\n      />\n      <div className={classes.form__footer}>\n        <IconInput\n          className={classes.topic}\n          Icon={HashIcon}\n          maxLength={TOPIC_MAX_CHARS}\n          value={tweetData.topic}\n          onChange={handleTopicChange}\n        />\n        <div className={classes.button}>\n          <span className={[classes.counter, charsLeftClass].join(' ')}>{charsLeft} left</span>\n          <Button\n            disabled={sendDisabled}\n            loading={loading}\n            onClick={send}>\n            Update\n          </Button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default UpdateTweetForm;\n","import React, { FC } from 'react';\nimport classes from './UpdateTweetModal.module.scss';\nimport Modal, { ModalProps } from '@/components/general/Modal/Modal';\nimport CloseIcon from '@/components/icons/CloseIcon';\nimport UpdateTweetForm from '@/components/UpdateTweetForm/UpdateTweetForm';\nimport { ITweet } from '@/models/tweet';\n\ninterface UpdateTweetModalProps extends ModalProps {\n  tweet: ITweet;\n}\n\nconst UpdateTweetModal: FC<UpdateTweetModalProps> = ({ isOpen, close, tweet }) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      close={close}>\n      <div className={classes.modal__wrapper}>\n        <div className={classes.modal__header}>\n          <h1>Update tweet</h1>\n          <button\n            className={classes.cancel}\n            onClick={() => close()}>\n            <CloseIcon />\n          </button>\n        </div>\n        <UpdateTweetForm tweet={tweet} onFinish={close} />\n      </div>\n    </Modal>\n  );\n};\n\nexport default UpdateTweetModal;\n","import React, { FC } from 'react';\nimport classes from './TweetControls.module.scss';\nimport EditIcon from '@/components/icons/EditIcon';\nimport DeleteIcon from '@/components/icons/DeleteIcon';\nimport UpdateTweetModal from '@/components/UpdateTweetModal/UpdateTweetModal';\nimport { useModal } from '@/hooks/useModal';\nimport { useAppDispatch } from '@/hooks/useAppDispatch';\nimport { tweetsActions } from '@/store/reducers/tweets';\nimport { ITweet } from '@/models/tweet';\n\ninterface TweetControlsProps {\n  tweet: ITweet;\n}\n\nconst TweetControls: FC<TweetControlsProps> = ({ tweet }) => {\n  const { isOpen, toggle } = useModal();\n  const dispatch = useAppDispatch();\n\n  const editTweet = (e: React.MouseEvent<HTMLButtonElement>) => {\n    toggle();\n  };\n\n  const deleteTweet = (e: React.MouseEvent<HTMLButtonElement>) => {\n    dispatch(tweetsActions.deleteTweet(tweet));\n  };\n\n  return (\n    <>\n      <div className={classes.controls__wrapper}>\n        <button onClick={editTweet}>\n          <EditIcon />\n        </button>\n        <button onClick={deleteTweet}>\n          <DeleteIcon />\n        </button>\n      </div>\n      <UpdateTweetModal\n        isOpen={isOpen}\n        close={toggle}\n        tweet={tweet}\n      />\n    </>\n  );\n};\n\nexport default TweetControls;\n","import { useState } from 'react';\n\nexport interface UseModal {\n  isOpen: boolean;\n  toggle: () => void;\n}\n\nexport const useModal = (): UseModal => {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const toggle = () => {\n    const state = !isOpen;\n    setIsOpen(state);\n\n    if (state) {\n      document.body.classList.add('overflow-hidden');\n    } else {\n      document.body.classList.remove('overflow-hidden');\n    }\n  };\n\n  return {\n    isOpen,\n    toggle\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"footer\":\"TweetFooter_footer__Q4Pmr\",\"footer__topic\":\"TweetFooter_footer__topic__XLnjc\",\"footer__likes\":\"TweetFooter_footer__likes__AoYpM\",\"active\":\"TweetFooter_active__8SZ+K\"};","import React, { FC, SVGProps } from 'react';\n\nconst HeartIcon: FC<SVGProps<SVGSVGElement>> = (props) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      version=\"1.1\"\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 24 24\"\n      fill=\"currentColor\"\n      {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z\"\n      />\n    </svg>\n  );\n};\n\nexport default HeartIcon;\n","import React, { FC, SVGProps } from 'react';\n\nconst HeartOutlineIcon: FC<SVGProps<SVGSVGElement>> = (props) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      version=\"1.1\"\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 24 24\"\n      fill=\"currentColor\"\n      {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M12.1,18.55L12,18.65L11.89,18.55C7.14,14.24 4,11.39 4,8.5C4,6.5 5.5,5 7.5,5C9.04,5 10.54,6 11.07,7.36H12.93C13.46,6 14.96,5 16.5,5C18.5,5 20,6.5 20,8.5C20,11.39 16.86,14.24 12.1,18.55M16.5,3C14.76,3 13.09,3.81 12,5.08C10.91,3.81 9.24,3 7.5,3C4.42,3 2,5.41 2,8.5C2,12.27 5.4,15.36 10.55,20.03L12,21.35L13.45,20.03C18.6,15.36 22,12.27 22,8.5C22,5.41 19.58,3 16.5,3Z\"\n      />\n    </svg>\n  );\n};\n\nexport default HeartOutlineIcon;\n","import { PublicKey } from '@solana/web3.js';\n\nexport interface ILike {\n  author: PublicKey;\n}\n\nexport class Like implements ILike {\n  constructor(public author: PublicKey) {}\n}\n","import React, { FC, useMemo, useState } from 'react';\nimport classes from './TweetFooter.module.scss';\nimport { NavLink } from 'react-router-dom';\nimport HeartIcon from '@/components/icons/HeartIcon';\nimport HeartOutlineIcon from '@/components/icons/HeartOutlineIcon';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { ITweet } from '@/models/tweet';\nimport { ILike, Like } from '@/models/like';\nimport { RoutePaths } from '@/router';\n\ninterface TweetFooterProps {\n  tweet: ITweet;\n}\n\nconst TweetFooter: FC<TweetFooterProps> = ({ tweet }) => {\n  const { connected, publicKey } = useWallet();\n  const [likes, setLikes] = useState<ILike[]>([]);\n\n  const topicLink = (topic: string): string => {\n    return `${RoutePaths.TOPICS}/${topic}`;\n  };\n\n  const hasLikes = useMemo<boolean>(() => {\n    return !!likes.length;\n  }, [likes]);\n\n  const isLiked = useMemo<boolean>(() => {\n    if (publicKey) {\n      return !!likes.find((l) => l.author.toBase58() === publicKey.toBase58());\n    }\n    return false;\n  }, [likes, publicKey]);\n\n  const addLike = (e: React.MouseEvent<HTMLButtonElement>) => {\n    if (publicKey) {\n      setLikes([...likes, new Like(publicKey)]);\n    }\n  };\n\n  const removeLike = (e: React.MouseEvent<HTMLButtonElement>) => {\n    if (publicKey) {\n      setLikes([...likes.filter((l) => l.author.toBase58() !== publicKey.toBase58())]);\n    }\n  };\n\n  return (\n    <div className={classes.footer}>\n      {tweet.topic && (\n        <NavLink\n          className={classes.footer__topic}\n          to={topicLink(tweet.topic)}>\n          #{tweet.topic}\n        </NavLink>\n      )}\n      <div className={classes.footer__likes}>\n        {hasLikes && <span>{likes.length}</span>}\n        {isLiked ? (\n          <button\n            className={classes.active}\n            onClick={removeLike}>\n            <HeartIcon />\n          </button>\n        ) : (\n          <button\n            disabled={!connected}\n            onClick={addLike}>\n            <HeartOutlineIcon />\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TweetFooter;\n","import React, { FC, memo, useCallback, useMemo } from 'react';\nimport classes from './TweetCard.module.scss';\nimport { NavLink } from 'react-router-dom';\nimport TweetControls from '@/components/TweetControls/TweetControls';\nimport TweetFooter from '@/components/TweetFooter/TweetFooter';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { ITweet } from '@/models/tweet';\nimport { PublicKey } from '@solana/web3.js';\nimport { RoutePaths } from '@/router';\n\nexport interface TweetCardProps {\n  tweet: ITweet;\n}\n\nconst TweetCard: FC<TweetCardProps> = ({ tweet }) => {\n  const { publicKey } = useWallet();\n\n  const authorLink = useCallback(\n    (author: PublicKey): string => {\n      if (publicKey?.toBase58() === author.toBase58()) {\n        return RoutePaths.PROFILE;\n      }\n      return `${RoutePaths.USERS}/${author.toBase58()}`;\n    },\n    [publicKey]\n  );\n\n  const isSelfTweet = useMemo<boolean>(() => {\n    return publicKey?.toBase58() === tweet.author.toBase58();\n  }, [publicKey, tweet.author]);\n\n  return (\n    <div className={classes.tweet__wrapper}>\n      <div className={classes.tweet__header}>\n        <NavLink\n          className={classes.author}\n          to={authorLink(tweet.author)}>\n          {tweet.authorKey}\n        </NavLink>\n        <span className={classes.date}>{tweet.createdAt}</span>\n        {isSelfTweet && <TweetControls tweet={tweet} />}\n      </div>\n      <div className={classes.tweet__body}>\n        <p className={classes.content}>{tweet.content}</p>\n      </div>\n      <TweetFooter tweet={tweet} />\n    </div>\n  );\n};\n\nexport default memo(TweetCard);\n","// extracted by mini-css-extract-plugin\nexport default {\"tweet__list\":\"TweetList_tweet__list__1e2VC\"};","import React, { FC, useRef } from 'react';\nimport { ITweet } from '@/models/tweet';\nimport Loading from '@/components/Loading';\nimport TweetCard from '@/components/TweetCard/TweetCard';\nimport classes from './TweetList.module.scss';\nimport { useObserver } from '@/hooks/useObserver';\n\nexport interface TweetListProps {\n  tweets: ITweet[];\n  loading: boolean;\n  onNewPage?: () => unknown;\n}\n\nconst TweetList: FC<TweetListProps> = ({ tweets, loading, onNewPage = () => {} }) => {\n  const lastElement = useRef<HTMLDivElement>(null);\n\n  useObserver(\n    lastElement,\n    () => {\n      onNewPage();\n    },\n    loading\n  );\n  return (\n    <div className={classes.tweet__list}>\n      {tweets.map((tweet) => (\n        <TweetCard\n          tweet={tweet}\n          key={tweet.key}\n        />\n      ))}\n      <div ref={lastElement} />\n      {loading && <Loading />}\n    </div>\n  );\n};\n\nexport default TweetList;\n","import { RefObject, useEffect } from 'react';\n\nexport const useObserver = (\n  ref: RefObject<HTMLElement>,\n  callback: () => unknown,\n  frozen: boolean = false\n): void => {\n  useEffect(() => {\n    const node = ref?.current;\n    const hasIOSupport = !!window.IntersectionObserver;\n\n    if (!node || !hasIOSupport) return;\n\n    const observer = new IntersectionObserver(([entry]: IntersectionObserverEntry[]) => {\n      if (entry?.isIntersecting && !frozen) {\n        callback();\n      }\n    });\n    observer.observe(node);\n\n    return () => observer.disconnect();\n  }, [ref, frozen, callback]);\n};\n","import React, { FC, ComponentPropsWithoutRef, useMemo, useRef, useEffect } from 'react';\nimport classes from './Button.module.scss';\nimport LoaderIcon from '@/components/icons/LoaderIcon';\nimport { SwitchTransition, CSSTransition } from 'react-transition-group';\n\nexport enum ButtonVariants {\n  PRIMARY = 'primary',\n  SECONDARY = 'secondary'\n}\n\nexport interface ButtonProps extends ComponentPropsWithoutRef<'button'> {\n  children?: React.ReactNode;\n  className?: string;\n  loading?: boolean;\n  variant?: ButtonVariants;\n}\n\nconst Button: FC<ButtonProps> = ({\n  children,\n  className,\n  loading,\n  variant = ButtonVariants.PRIMARY,\n  ...props\n}) => {\n  const btnRef = useRef<HTMLButtonElement>(null);\n\n  const variantClassName = useMemo<string>(() => {\n    return classes[`btn--${variant}`];\n  }, [variant]);\n\n  useEffect(() => {\n    if (btnRef.current) {\n      const btnWidth = btnRef.current.offsetWidth;\n      btnRef.current.style.width = `${btnWidth}px`;\n    }\n  }, []);\n\n  return (\n    <button\n      ref={btnRef}\n      {...props}\n      className={[classes.btn, variantClassName, className].join(' ')}>\n      <SwitchTransition mode=\"out-in\">\n        <CSSTransition\n          addEndListener={(node: HTMLElement, done: () => void) => {\n            node.addEventListener('transitionend', done, false);\n          }}\n          key={loading ? 'loader' : 'btn'}\n          classNames=\"fade\"\n          unmountOnExit>\n          {loading ? (\n            <div className={classes.btn__loader}>\n              <LoaderIcon className={classes.loader_color} />\n            </div>\n          ) : (\n            <div className={classes.btn__txt}>{children}</div>\n          )}\n        </CSSTransition>\n      </SwitchTransition>\n    </button>\n  );\n};\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__Nl0XW\",\"btn--primary\":\"Button_btn--primary__wQaO+\",\"loader_color\":\"Button_loader_color__uKVIQ\",\"btn--secondary\":\"Button_btn--secondary__-FVi7\",\"btn__loader\":\"Button_btn__loader__M8Ir4\",\"btn__txt\":\"Button_btn__txt__1DO3e\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"DataItem_item__Eym0s\",\"item__icon\":\"DataItem_item__icon__MRwjp\",\"item__content\":\"DataItem_item__content__3Imge\"};","import React, { FC, SVGProps } from 'react';\nimport classes from './DataItem.module.scss';\n\nexport interface DataItemProps {\n  className?: string;\n  content?: string;\n  Icon?: React.ComponentType<SVGProps<SVGSVGElement>>;\n}\n\nconst DataItem: FC<DataItemProps> = ({ className, content, Icon }) => {\n  return (\n    <div className={[classes.item, className].join(' ')}>\n      {Icon && <Icon className={classes.item__icon} />}\n      <span className={classes.item__content}>{content}</span>\n    </div>\n  );\n};\n\nexport default DataItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Input_input__+UP2D\"};","import React, { ComponentPropsWithoutRef, FC } from 'react';\nimport classes from './Input.module.scss';\n\nexport interface InputProps extends ComponentPropsWithoutRef<'input'> {\n  className?: string;\n}\n\nconst Input: FC<InputProps> = ({ className, ...props }) => {\n  return (\n    <input\n      {...props}\n      className={[classes.input, className].join(' ')}\n    />\n  );\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nexport default {\"textarea\":\"TextArea_textarea__eB0cu\"};","import React, { ComponentPropsWithoutRef, FC, useRef } from 'react';\nimport classes from './TextArea.module.scss';\nimport { useAutoresizeTextarea } from '@/hooks/useAutoresizeTextarea';\n\nexport interface TextAreaProps extends ComponentPropsWithoutRef<'textarea'> {\n  className?: string;\n  autoresize?: boolean;\n}\n\nconst TextArea: FC<TextAreaProps> = ({ className, autoresize, ...props }) => {\n  const textAreaRef = useRef<HTMLTextAreaElement>(null);\n\n  useAutoresizeTextarea(autoresize ? textAreaRef : undefined);\n\n  return (\n    <textarea\n      ref={textAreaRef}\n      {...props}\n      className={[classes.textarea, className].join(' ')}\n    />\n  );\n};\n\nexport default TextArea;\n","import { RefObject, useCallback, useEffect } from 'react';\r\n\r\nexport const useAutoresizeTextarea = (textAreaRef?: RefObject<HTMLTextAreaElement>): void => {\r\n  const resizeTextarea = useCallback(() => {\r\n    const element = textAreaRef?.current;\r\n    if (!element) return;\r\n    element.style.height = 'auto';\r\n    element.style.height = element.scrollHeight + 'px';\r\n  }, [textAreaRef]);\r\n\r\n  useEffect(() => {\r\n    const element = textAreaRef?.current;\r\n    if (!element) return;\r\n\r\n    resizeTextarea();\r\n    element.addEventListener('input', resizeTextarea);\r\n    return () => {\r\n      element?.removeEventListener('input', resizeTextarea);\r\n    };\r\n  }, [resizeTextarea, textAreaRef]);\r\n};\r\n","import React, { FC, SVGProps } from 'react';\n\nconst HashIcon: FC<SVGProps<SVGSVGElement>> = (props) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      version=\"1.1\"\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 24 24\"\n      fill=\"currentColor\"\n      {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M5.41,21L6.12,17H2.12L2.47,15H6.47L7.53,9H3.53L3.88,7H7.88L8.59,3H10.59L9.88,7H15.88L16.59,3H18.59L17.88,7H21.88L21.53,9H17.53L16.47,15H20.47L20.12,17H16.12L15.41,21H13.41L14.12,17H8.12L7.41,21H5.41M9.53,9L8.47,15H14.47L15.53,9H9.53Z\"\n      />\n    </svg>\n  );\n};\n\nexport default HashIcon;\n"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","useCharsLimit","content","limit","charsLeft","useMemo","length","charsLeftClass","usePaginatedTweets","filter","param","paramRequired","dispatch","cachedFilter","onNewPage","useCallback","tweetsActions","useEffect","CONTENT_MAX_CHARS","TOPIC_MAX_CHARS","className","Icon","props","classes","join","disabled","Input","xmlns","version","width","height","viewBox","fill","d","isOpen","close","children","createPortal","onClick","stopPropagation","document","body","tweet","onFinish","connected","useWallet","useState","tweetData","setTweetData","loading","setLoading","sendDisabled","send","e","preventDefault","updateTweet","topic","updatedTweet","TextArea","autoresize","placeholder","value","onChange","target","IconInput","HashIcon","maxLength","Button","DataItem","setIsOpen","toggle","state","classList","add","remove","useModal","Like","author","publicKey","likes","setLikes","hasLikes","isLiked","find","l","toBase58","to","RoutePaths","TweetCard","authorLink","isSelfTweet","authorKey","createdAt","memo","tweets","lastElement","useRef","ref","callback","frozen","node","current","hasIOSupport","window","IntersectionObserver","observer","entry","isIntersecting","observe","disconnect","useObserver","map","key","Loading","ButtonVariants","variant","PRIMARY","btnRef","variantClassName","btnWidth","offsetWidth","style","SwitchTransition","mode","CSSTransition","addEndListener","done","addEventListener","classNames","unmountOnExit","LoaderIcon","textAreaRef","resizeTextarea","element","scrollHeight","removeEventListener","useAutoresizeTextarea","undefined"],"sourceRoot":""}