{"version":3,"file":"static/js/293.3e9b7095.chunk.js","mappings":"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","sources":["webpack://solana-twitter-app/./src/components/general/TextArea/TextArea.module.scss?147a","components/general/TextArea/TextArea.tsx","hooks/useAutoresizeTextarea.ts","webpack://solana-twitter-app/./src/components/TweetForm/TweetForm.module.scss?f896","components/TweetForm/TweetForm.tsx","components/general/Button/Button.tsx","webpack://solana-twitter-app/./src/components/general/Button/Button.module.scss?3d2a","pages/Home.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"textarea\":\"TextArea_textarea__eB0cu\"};","import React, { ComponentPropsWithoutRef, FC, useRef } from 'react';\nimport classes from './TextArea.module.scss';\nimport { useAutoresizeTextarea } from '@/hooks/useAutoresizeTextarea';\n\nexport interface TextAreaProps extends ComponentPropsWithoutRef<'textarea'> {\n  className?: string;\n  autoresize?: boolean;\n}\n\nconst TextArea: FC<TextAreaProps> = ({ className, autoresize, ...props }) => {\n  const textAreaRef = useRef<HTMLTextAreaElement>(null);\n\n  useAutoresizeTextarea(autoresize ? textAreaRef : undefined);\n\n  return (\n    <textarea\n      ref={textAreaRef}\n      {...props}\n      className={[classes.textarea, className].join(' ')}\n    />\n  );\n};\n\nexport default TextArea;\n","import { RefObject, useCallback, useEffect } from 'react';\r\n\r\nexport const useAutoresizeTextarea = (textAreaRef?: RefObject<HTMLTextAreaElement>): void => {\r\n  const resizeTextarea = useCallback(() => {\r\n    const element = textAreaRef?.current;\r\n    if (!element) return;\r\n    element.style.height = 'auto';\r\n    element.style.height = element.scrollHeight + 'px';\r\n  }, [textAreaRef]);\r\n\r\n  useEffect(() => {\r\n    const element = textAreaRef?.current;\r\n    if (!element) return;\r\n\r\n    resizeTextarea();\r\n    element.addEventListener('input', resizeTextarea);\r\n    return () => {\r\n      element?.removeEventListener('input', resizeTextarea);\r\n    };\r\n  }, [resizeTextarea, textAreaRef]);\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form__wrapper\":\"TweetForm_form__wrapper__2kMtH\",\"form__footer\":\"TweetForm_form__footer__nPiA1\",\"form__counter\":\"TweetForm_form__counter__wsHll\"};","import React, { FC, useMemo, useState } from 'react';\nimport TextArea from '@/components/general/TextArea/TextArea';\nimport Button from '@/components/general/Button/Button';\nimport classes from './TweetForm.module.scss';\n\nexport interface TweetFormProps {\n  className?: string;\n}\n\nconst TweetForm: FC<TweetFormProps> = ({ className }) => {\n  const MAX_CHARS = 280;\n\n  const [loading, setLoading] = useState<boolean>(false);\n  const [text, setText] = useState<string>('');\n\n  const handleTextChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setText(e.target.value);\n  };\n\n  const charsLeft = useMemo<number>(() => {\n    return MAX_CHARS - text.length;\n  }, [text]);\n\n  const sendDisabled = useMemo<boolean>(() => {\n    return !text.length;\n  }, [text]);\n\n  const send = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n\n    console.log('send', text);\n    setLoading(true);\n    setTimeout(() => {\n      setText('');\n      setLoading(false);\n    }, 1000);\n  };\n\n  return (\n    <form className={[classes.form__wrapper, className].join(' ')}>\n      <TextArea\n        autoresize\n        placeholder=\"Enter tweet\"\n        value={text}\n        onChange={handleTextChange}\n      />\n      <div className={classes.form__footer}>\n        <span className={classes.form__counter}>{charsLeft} left</span>\n        <Button\n          disabled={sendDisabled}\n          loading={loading}\n          onClick={send}>\n          Send\n        </Button>\n      </div>\n    </form>\n  );\n};\n\nexport default TweetForm;\n","import React, { FC, ComponentPropsWithoutRef, useMemo, useRef, useEffect } from 'react';\nimport classes from './Button.module.scss';\nimport LoaderIcon from '@/components/icons/LoaderIcon';\nimport { SwitchTransition, CSSTransition } from 'react-transition-group';\n\nexport enum ButtonVariants {\n  PRIMARY = 'primary',\n  SECONDARY = 'secondary'\n}\n\nexport interface ButtonProps extends ComponentPropsWithoutRef<'button'> {\n  children?: React.ReactNode;\n  className?: string;\n  loading?: boolean;\n  variant?: ButtonVariants;\n}\n\nconst Button: FC<ButtonProps> = ({\n  children,\n  className,\n  loading,\n  variant = ButtonVariants.PRIMARY,\n  ...props\n}) => {\n  const btnRef = useRef<HTMLButtonElement>(null);\n\n  const variantClassName = useMemo<string>(() => {\n    return classes[`btn--${variant}`];\n  }, [variant]);\n\n  useEffect(() => {\n    if (btnRef.current) {\n      const btnWidth = btnRef.current.offsetWidth;\n      btnRef.current.style.width = `${btnWidth}px`;\n    }\n  }, []);\n\n  return (\n    <button\n      ref={btnRef}\n      {...props}\n      className={[classes.btn, variantClassName, className].join(' ')}>\n      <SwitchTransition mode=\"out-in\">\n        <CSSTransition\n          addEndListener={(node: HTMLElement, done: () => void) => {\n            node.addEventListener('transitionend', done, false);\n          }}\n          key={loading ? 'loader' : 'btn'}\n          classNames=\"fade\"\n          unmountOnExit>\n          {loading ? (\n            <div className={classes.btn__loader}>\n              <LoaderIcon className={classes.loader_color} />\n            </div>\n          ) : (\n            <div className={classes.btn__txt}>{children}</div>\n          )}\n        </CSSTransition>\n      </SwitchTransition>\n    </button>\n  );\n};\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__Nl0XW\",\"btn--primary\":\"Button_btn--primary__wQaO+\",\"loader_color\":\"Button_loader_color__uKVIQ\",\"btn--secondary\":\"Button_btn--secondary__-FVi7\",\"btn__loader\":\"Button_btn__loader__M8Ir4\",\"btn__txt\":\"Button_btn__txt__1DO3e\"};","import React, { FC } from 'react';\nimport TweetForm from \"@/components/TweetForm/TweetForm\";\n\nconst Home: FC = () => {\n  return (\n    <>\n      <TweetForm />\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["className","autoresize","props","textAreaRef","useRef","resizeTextarea","useCallback","element","current","style","height","scrollHeight","useEffect","addEventListener","removeEventListener","useAutoresizeTextarea","undefined","ref","classes","join","useState","loading","setLoading","text","setText","charsLeft","useMemo","length","sendDisabled","placeholder","value","onChange","e","target","Button","disabled","onClick","preventDefault","console","log","setTimeout","ButtonVariants","children","variant","PRIMARY","btnRef","variantClassName","btnWidth","offsetWidth","width","SwitchTransition","mode","CSSTransition","addEndListener","node","done","classNames","unmountOnExit","LoaderIcon"],"sourceRoot":""}